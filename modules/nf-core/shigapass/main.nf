process SHIGAPASS {
    tag "$meta.id"
    label 'process_medium'

    conda "${moduleDir}/environment.yml"
    container "${ workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ?
        'https://depot.galaxyproject.org/singularity/shigapass%3A1.5.0--hdfd78af_0':
        'biocontainers/shigapass:1.5.0--hdfd78af_0' }"

    input:
    tuple val(meta), path(assembly)

    output:
    tuple val(meta), path("*.csv"), emit: report
    path "versions.yml"           , emit: versions

    when:
    task.ext.when == null || task.ext.when

    script:
    def args = task.ext.args ?: ''
    def prefix = task.ext.prefix ?: "${meta.id}"
    """
    # Convert our genome path to a file with a path in it
    ls $assembly > ${assembly}_tmp.txt

    # Run ShigaPass
    sh ShigaPass.sh \\
        -l ${assembly}_tmp.txt \\
        $args \\
        -p /usr/local/share/shigapass-1.5.0/db \\
        -t $task.cpus \\
        -o ${prefix}

    # Remove the temporary file from above
    rm ${assembly}_tmp.txt

    # Delete the directory generated by ShigaPass
    mv ${prefix}/*.csv ${prefix}.csv

    rmdir ${prefix}

    cat <<-END_VERSIONS > versions.yml
    "${task.process}":
        shigapass: \$(echo \$(ShigaPass.sh --version 2>&1) | sed 's/^.*ShigaPass version //' )
    END_VERSIONS
    """

    stub:
    def args = task.ext.args ?: ''
    def prefix = task.ext.prefix ?: "${meta.id}"
    """
    touch ${prefix}.csv

    cat <<-END_VERSIONS > versions.yml
    "${task.process}":
        shigapass: \$(echo \$(ShigaPass.sh --version 2>&1) | sed 's/^.*ShigaPass version //' )
    END_VERSIONS
    """
}